Algorithm comparisons always depend on what type of problem you are trying to solve.

We learn these things when we start DSA, the BIG O of time and space. The whole point of learning DSA is to learn how to make trade-offs between these two while finding the best solution to that particular scenario in the real world.

In most cases, there is a hidden thing that we use for this trade-off. The third most important thing after time and space complexity is the readability and maintainability of code. There is no point in writing gibberish code that is hard to understand and read. You might as well use assembly to write code.